{"version":3,"sources":["components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["Container","children","className","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","id","Component","ContactList","contacts","onDeleteContacts","map","contact","onClick","Filter","App","filter","deleteContacts","contactsId","prevState","formSubmitHandler","data","console","log","todo","find","alert","changeFilter","e","getVisibleContacts","normalizeFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f6cc0d9.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.modules.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label htmlFor={this.numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\n\nconst ContactList = ({ contacts, onDeleteContacts }) =>\n  contacts !== [] ? (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: <span>{contact.number}</span>\n          <button onClick={() => onDeleteContacts(contact.id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  ) : null;\nexport default ContactList;\n","import React from 'react';\n\nconst Filter = ({ value, onChange }) => (\n  <div>\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  </div>\n);\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  static propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.string,\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  deleteContacts = contactsId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactsId),\n    }));\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n\n    const todo = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    const { contacts } = this.state;\n    const isExistContacts = !!contacts.find(\n      contact => contact.name === data.name,\n    );\n    !isExistContacts\n      ? this.setState(prevState => ({\n          contacts: [todo, ...prevState.contacts],\n        }))\n      : alert(`${data.name} is already in contacts`);\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const normalizeFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.formSubmitHandler} />\n\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContacts={this.deleteContacts}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}